// <auto-generated />
using System;
using CoffeeShop.Products.Api.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeShop.Products.Api.Storage.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240622145454_AddCategoryTypeItem")]
    partial class AddCategoryTypeItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryItem")
                        .HasColumnType("int");

                    b.Property<string>("CategoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryItem = 0,
                            CategoryType = "Coffee",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rich and aromatic Ethiopian beans.",
                            Name = "Ethiopian Whole Bean",
                            Price = 15.99m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryItem = 1,
                            CategoryType = "Coffee",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Smooth and strong Italian ground coffee.",
                            Name = "Italian Ground Coffee",
                            Price = 12.50m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryItem = 2,
                            CategoryType = "Coffee",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Convenient and tasty instant coffee.",
                            Name = "Instant Coffee Delight",
                            Price = 8.99m,
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryItem = 3,
                            CategoryType = "Coffee",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rich espresso coffee pods.",
                            Name = "Espresso Coffee Pods",
                            Price = 9.99m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryItem = 5,
                            CategoryType = "Accessories",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Eco-friendly coffee maker.",
                            Name = "Organic Coffee Maker",
                            Price = 55.00m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryItem = 14,
                            CategoryType = "Others",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Receive a new coffee each month.",
                            Name = "Monthly Coffee Subscription",
                            Price = 29.99m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryItem = 14,
                            CategoryType = "Others",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Premium coffee delivered monthly.",
                            Name = "Premium Coffee Subscription",
                            Price = 49.99m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 8,
                            CategoryItem = 14,
                            CategoryType = "Others",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Exclusive blends for coffee lovers.",
                            Name = "Coffee Lover's Subscription",
                            Price = 39.99m,
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.ProductRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Stars = 5
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Stars = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Stars = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Stars = 5
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Stars = 4
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            Stars = 5
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            Stars = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 8,
                            Stars = 5
                        });
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Seattle",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Best Beans",
                            State = "WA"
                        },
                        new
                        {
                            Id = 2,
                            City = "San Francisco",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Coffee Palace",
                            State = "CA"
                        },
                        new
                        {
                            Id = 3,
                            City = "New York",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Java Central",
                            State = "NY"
                        });
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.Product", b =>
                {
                    b.HasOne("CoffeeShop.Products.Api.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.ProductRating", b =>
                {
                    b.HasOne("CoffeeShop.Products.Api.Models.Product", "Product")
                        .WithMany("ProductRatings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.Product", b =>
                {
                    b.Navigation("ProductRatings");
                });

            modelBuilder.Entity("CoffeeShop.Products.Api.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
